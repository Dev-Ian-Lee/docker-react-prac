# 관리자 권한 여부
sudo: required

# 언어(플랫폼 선택)
language: generic

# 도커 환경 구성
services:
  - docker

# 스크립트를 실행할 수 있는 환경 구성
before_install:
  - echo "start C7reating an image with dockerfile"
  - docker build -t desfox/docker-react-app -f Dockerfile.dev .

# 실행할 스크립트(테스트 실행)
script:
  - docker run -e CI=true desfox/docker-react-app npm run test -- --coverage

# 테스트 성공 후 할 일
after_success:
  - echo "Test Success"

# 배포를 위한 코드
deploy:

  # 사용할 외부 서비스(s3, elasticbeanstalk, firebase, ...)
  provider: elasticbeanstalk

  # 현재 사용 중인 AWS의 서비스가 위치하고 있는 물리적 장소(서울)
  region: "ap-northeast-2"

  # 생성한 어플리케이션의 이름
  app: "docker-react-app"

  # 환경의 이름
  env: "DockerReactApp-env"

  # Travis CI의 파일을 압축해서 S3에 보내기 때문에 해당 elasticbeanstalk를 사용하기 위한 S3 버킷의 이름 명시
  bucket-name: "elasticbeanstalk-ap-northeast-2-136955726268"

  # 어플리케이션 이름과 동일
  bucket-path: "docker-react-app"

  # 어떤 브랜치에 push했을 때 AWS에 배포할 지 설정
  on:
    branch: master

  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY